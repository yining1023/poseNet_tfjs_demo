{"dependencies":[{"name":"/Users/yiningshi/dev/tfjs-models/posenet/demos/package.json","includedInParent":true,"mtime":1530912130696},{"name":"/Users/yiningshi/dev/tfjs-models/posenet/demos/.babelrc","includedInParent":true,"mtime":1529855715672},{"name":"/Users/yiningshi/dev/tfjs-models/posenet/demos/node_modules/pbkdf2/package.json","includedInParent":true,"mtime":1524184076000},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nfunction checkBuffer (buf, name) {\n  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {\n    throw new TypeError(name + ' must be a buffer or string')\n  }\n}\n\nmodule.exports = function (password, salt, iterations, keylen) {\n  checkBuffer(password, 'Password')\n  checkBuffer(salt, 'Salt')\n\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n","map":{"mappings":[{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/pbkdf2/lib/precondition.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}}],"sources":{"node_modules/pbkdf2/lib/precondition.js":"var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nfunction checkBuffer (buf, name) {\n  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {\n    throw new TypeError(name + ' must be a buffer or string')\n  }\n}\n\nmodule.exports = function (password, salt, iterations, keylen) {\n  checkBuffer(password, 'Password')\n  checkBuffer(salt, 'Salt')\n\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n"},"lineCount":30}},"hash":"746bff4e31fe401f03e95cf7bf0d1ab2","cacheData":{"env":{}}}